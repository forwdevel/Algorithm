Java Vector
      >> This class is an implementation of the 'List' interface that allows us to create resizable-arrays 
      similar to the ArrayList class.

Java Vector vs. ArrayList
      >> In Java, both 'ArrayList' and 'Vector' implements the 'List' interface and provides the same fuctionalities.
            However, these exist some differences between them.
      >> The 'Vector' class synchonizes each individual operation. 
            This means whenever we want to perform some operation on vectors,
            the 'Vector' class automatically applies a lock to that operation.
      >> It is because when one thread is accessing a vector, and at the same time another thread tries to access it, 
            an exception called 'ConcurrentModificationException' is generated.
            Hence, this continuous use of lock for each operation makes vectors less efficient.
      >> However, in array lists, methods are not synchronized. Instead, it uses the 'Collections.synchronizedList()' 
      method that synchronizes the list as a whole.
      >> It is recommended to use ArrayList in place of Vector because vectors less efficient.

Add Elements to Vector
      >> add(element) - adds an element to vectors
      >> add(index, element) - adds an element to the specified position
      >> addAll(vector) - adds all elements of a vector to another vector

