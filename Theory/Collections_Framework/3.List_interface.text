Java List
      >> In Java, this is an ordered collection that allows us to store and access elements squentially.
      >> It extends the Collection interface.

------------------------------------------------------------------------------------------------------------------

Classes that Implement List
      >> Since 'List' is an interface, we cannot create objects from it.
      >> In order to use functionalities of the 'List' interface, we can use these classes:
            1. ArrayList
            2. LinkedList
            3. Vector
            4. Stack
      >> These classes are defined in the Collections framework and Implement the 'List' interface.

------------------------------------------------------------------------------------------------------------------

How to use List?
      >> In Java, we must import 'java.util.List' package in order to use 'List'.

      /*
      // ArrayList Implementation of List
      List<String> list1 = new ArrayList<>();

      // LinkedList Implementation of List
      List<String> list2 = new LinkedList<>();      
      */

      >> These objects can use the functionalities of the 'List' interface.

      
------------------------------------------------------------------------------------------------------------------

Methods of List
      >> This includes all the methods of the 'Collection' interface.
      >> Its because 'Collection' is a super interface of 'List'.
      >> Some of the commonly used methods of the 'Collection' interface that's also available in the 'List' interface are :
            add() - adds an element to a list
            addAll() - adds all elements of one list to another
            get() - helps to randomly access elements from lists
            iterator() - returns iterator object that can be used to squentially access elements of lists.
            set() - changes elements of lists
            remove() - removes an element from the list
            removeAll() - removes all the elements form the list
            clear() - removes all the elements from the list (more efficient than 'removeAll()')
            size() - returns the length of lists
            toArray() - converts a list into an array
            contains() - returns 'true' if a list contains specified element


------------------------------------------------------------------------------------------------------------------

Java List vs. Set
      >> Both the 'List' interface and the 'Set' interface inherits the 'Collection' interface.
      >> However, there exists some difference between them.
            >> Lists can include duplicate elements. However, elements in sets are stored in groups like sets in mathematics.
            >> Elements in lists are stored in some order. However, elements in sets are stored in groups like sets in mathematics.
